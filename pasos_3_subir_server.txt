
sudo yum -y update
sudo yum -y install epel-release
sudo yum -y install httpd mod_wsgi


sudo firewall-cmd --zone=public --permanent --add-port=80/tcp
sudo firewall-cmd --zone=public --permanent --add-port=8000/tcp
sudo firewall-cmd --zone=public --permanent --add-port=25/tcp


firewall-cmd --list-all (verifica los puertos abiertos, deben estar por lo menos el 80 y el 25 abiertos)


systemctl restart firewalld (reinicia el firewall)
setsebool -P httpd_can_network_connect_db 1 (abrir conexiones de bd)
setsebool -P httpd_can_sendmail 1 (abrir el envío de correos)



sudo yum install centos-release-scl
sudo yum -y install rh-python38 python38-devel httpd-devel rh-python38-mod_wsgi
scl enable rh-python38 bash
python --version


var/wwww
mkdir nombre_proyecto
cd nombre_proyecto


pip install virtualenv (corroborar que el pip sea de python 3.8 con pip --version)
virtualenv env
source env/bin/activate


pip install -r requirements.txt (revisar pip que sea para python3.8)
django-admin.py startproject myfirstproject . (NO OLVIDAR EL PUNTO!!!)

Agregar linea para los static en setting
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

Agregar el * en setting
ALLOWED_HOSTS = ['*']


Debido a que en centos 7 el sqlite no se actualiza a la versión requerida se debe realizar lo siguiente:

ir a env/lib/python3.8/site-packages/django/db/backends/sqlite3/base.py

Cambiar
def check_sqlite_version():
    if Database.sqlite_version_info < (3, 8, 3):
por
def check_sqlite_version():
    if Database.sqlite_version_info < (3, 7, 3):

Este paso se puede omitir si ya se dipone de otra BD.



python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic


deactivate
sudo chown -R apache:apache /var/www/


ir a (puede ser por el winscp) y crear archivo django.conf

sudo vim /etc/httpd/conf.d/django.conf

Luego agregar

<VirtualHost *:80>

	AllowEncodedSlashes NoDecode
	AllowEncodedSlashes On
        
        ServerName capacity_institucional
        DocumentRoot /var/www/

        Alias /static /var/www/capacity_institucional/static
        <Directory "/var/www/capacity_institucional/static">
                Options FollowSymLinks
                Order allow,deny
                Allow from all
                Require all granted
        </Directory>

        Alias /media /var/www/capacity_institucional/media
        <Directory "/var/www/capacity_institucional/media">
                Options FollowSymLinks
                Order allow,deny
                Allow from all
                Require all granted
        </Directory>
 

        WSGIPassAuthorization On
        WSGIDaemonProcess capacity_institucional python-path=/var/www/capacity_institucional:/var/www/capacity_institucional/env/lib/python3.8/site-packages
        WSGIProcessGroup capacity_institucional
        WSGIScriptAlias / /var/www/capacity_institucional/proyecto_django/wsgi.py

        <Directory /var/www/capacity_institucional/proyecto_django>
                <Files wsgi.py>
                        Require all granted
                </Files>
        </Directory>
</VirtualHost>



sudo systemctl status httpd (verifica el estado del servicio apache)
sudo systemctl restart httpd (reinicia el apache)



Si no hay errores entonces el proceso está finalizado.

si hay algún error...


apachectl configtest (para revisar errores)


Si la pagina arroja un error al cargar, ir a revisar el log var/log/httpd/access_log

**Si error: AttributeError: ‘module’ object has no attribute ‘lru_cache’ (ir a 1)


1.- 
Este error que se encuentra en los registros de errores de Apache ocurre cuando está utilizando python3 mod_wsgi. Para rectificar esto, ejecute lo siguiente:

sudo cp /opt/rh/httpd24/root/usr/lib64/httpd/modules/mod_rh-python38-wsgi.so /lib64/httpd/modules


sudo cp /opt/rh/httpd24/root/etc/httpd/conf.modules.d/10-rh-python38-wsgi.conf /etc/httpd/conf.modules.d

*** A veces por línea de código no funciona, no copia bien los archivos, hay que hacer las copias de los archivos por winscp ***

copiar de: /opt/rh/httpd24/root/usr/lib64/httpd/modules/mod_rh-python38-wsgi.so
Copiar a: /lib64/httpd/modules

copiar de: /opt/rh/httpd24/root/etc/httpd/conf.modules.d/10-rh-python38-wsgi.conf
Copiar a: /etc/httpd/conf.modules.d


sudo systemctl restart httpd



ref:
https://linuxize.com/post/how-to-install-python-3-on-centos-7/
https://computingforgeeks.com/deploy-python-3-django-application-on-centos-with-apache-and-mod-wsgi/
https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-centos-7-es



**********************************************************************************************************

setting.py (este setting funciona)

"""
Django settings for proyecto_django project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.urls import reverse_lazy


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o#&r)$g9u5)%9!%w1e6sgi^0yrj-ocbu24&)2*ldlox#(ysd^t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# LDAP auth settings.

AUTHENTICATION_BACKENDS = (
'django.contrib.auth.backends.ModelBackend',
'django_python3_ldap.auth.LDAPBackend',
)

LDAP_AUTH_URL = "ldap://zeus.ine.cl"
LDAP_AUTH_USE_TLS = False
LDAP_AUTH_SEARCH_BASE = "ou=INE,DC=ine,DC=cl"
LDAP_AUTH_OBJECT_CLASS = "organizationalPerson"

LDAP_AUTH_USER_FIELDS = {
"username": "sAMAccountName",
"first_name": "givenName",
"last_name": "sn",
"email": "mail",
}


LDAP_AUTH_USER_LOOKUP_FIELDS = ("username",)

#LDAP_AUTH_CLEAN_USER_DATA = "django_python3_ldap.utils.clean_user_data"

#LDAP_AUTH_SYNC_USER_RELATIONS = "django_python3_ldap.utils.sync_user_relations"

#LDAP_AUTH_FORMAT_SEARCH_FILTERS = "django_python3_ldap.utils.format_search_filters"

LDAP_AUTH_FORMAT_USERNAME = "django_python3_ldap.utils.format_username_active_directory"

LDAP_AUTH_ACTIVE_DIRECTORY_DOMAIN = "INE"

#LDAP_AUTH_CONNECTION_USERNAME = 'jrodriguez' #|| Si le da la chiripiorca al sincronizar descomentar
#LDAP_AUTH_CONNECTION_PASSWORD = '(ine2024)'  #|| Si le da la chiripiorca al sincronizar descomentar

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django_python3_ldap": {
            "handlers": ["console"],
            "level": "INFO",
        },
    },
}

# Application definition



INSTALLED_APPS = [



    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    'django_python3_ldap',
    'sitetree',
    'mathfilters',



    'apps.eje',
    'apps.registration',

    'apps.periodos',

    'apps.estructura',
    'apps.objetivos',
    'apps.jefaturas',
    'apps.familia_cargo',
    'apps.gestion_horas',
    'apps.feriados',
    'apps.vista_objetivos',
    'apps.periodicidad',
    'apps.productos',
    'apps.estado_flujo',
    'apps.controlador',
    'apps.actividades',
    'apps.valida_plan',
    'apps.valida_plan2',
    'apps.perfiles',

    'apps.estado_actividad',
    'apps.estado_plan',
    'apps.estado_seguimiento',
    'apps.revision_planificacion',
    'apps.seguimiento_formula',
    'apps.reportes',
    'apps.planificacion_admin',








]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'proyecto_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',



            ],
        },
    },
]

WSGI_APPLICATION = 'proyecto_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases



# DATABASES = {
#    'default': {
#        'ENGINE': 'mysql_cymysql',
#        'NAME': 'DJANGODB',
#        'USER': 'usuariocapacity',
#        'PASSWORD': 'FoXoWu',
#        'HOST': '10.91.160.53',
#        'PORT': 3306,
#    }
# }

DATABASES = {
    'default': {
        'ENGINE': 'mysql_cymysql',
        'NAME': 'DJANGO_TEST_JASON',
        'USER': 'jason',
        'PASSWORD': '1SUMU79S',
        'HOST': '10.91.163.94',
        'PORT': 3306,
    }
}



# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'es-cl'

TIME_ZONE = 'America/Santiago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')


STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]


#LOGIN_REDIRECT_URL = reverse_lazy('solicitud_lista')
#LOGOUT_REDIRECT_URL = reverse_lazy('logout')
#DATE_INPUT_FORMATS = ['%d-%m-%Y']

# EMAIL_USE_TLS = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'jasonrd2@gmail.com'
# EMAIL_HOST_PASSWORD = 'rodrigue0217'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# DEFAULT_FROM_EMAIL = 'jasonrd2@gmail.com'

#EMAIL_USE_TLS = False
#EMAIL_HOST = '192.168.1.235'
#EMAIL_PORT = 25
#EMAIL_HOST_USER = 'capacity.planificacion@ine.cl'
#EMAIL_HOST_PASSWORD = '(Morande_801)'
#EMAIL_HOST_USER = 'jason.rodriguez@ine.cl'
#EMAIL_HOST_PASSWORD = 'JR14202112-9'
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
#EMAIL_USE_SSL = False


EMAIL_USE_TLS = False
EMAIL_HOST = '192.168.1.235'
EMAIL_PORT = 25

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = 'capacity.planificacion@ine.cl'
EMAIL_USE_SSL = False

*********************************************************************************************************

-- Sincronizar usuarios LDAP

python manage.py ldap_sync_users


